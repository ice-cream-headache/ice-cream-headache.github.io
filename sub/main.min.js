var pet;
(function (pet) {
    var Browser = Laya.Browser;
    var JSUtils = (function () {
        function JSUtils() {
        }
        JSUtils.checkLogin = function () {
            pet.Global.UID = JSUtils.getQueryString("uid") || "";
            pet.Global.TOKEN = JSUtils.getQueryString("token") || "";
            pet.Global.OPENTYPE = 1;
            /*if (pet.Global.UID && pet.Global.TOKEN) {
                pet.Global.OPENTYPE = 2;
            }
            else {
                if (JSUtils.getCookie("uid") && JSUtils.getCookie("token")) {
                    //pet.Global.UID = JSUtils.getCookie("uid");
                    //pet.Global.TOKEN = JSUtils.getCookie("token");
                    pet.Global.OPENTYPE = 1;
                }
                else {
                    pet.Global.OPENTYPE = 0;
                }
            }*/
            JSUtils.getUserData();
        };
        JSUtils.getUserData = function () {
            if (pet.Global.UID && pet.Global.TOKEN) {
                var data = { "filename": "feeling", "username": pet.Global.UID, "passwd": pet.Global.TOKEN };
                pet.XHR().Post(data, window, JSUtils.getUserDataHandler);
            }
            else {
                JSUtils.showLogin();
            }
        };
        JSUtils.getUserDataHandler = function (data) {
            if (true) {
                //pet.Global.PETDATA = data.user;
                //if (pet.Global.OPENTYPE == 0) {
                //    JSUtils.setCookie("uid", pet.Global.UID);
                //    JSUtils.setCookie("token", pet.Global.TOKEN);
                //}
                pet.Global.PETDATA = {
                    "master_name": "若即__若离",
                    "birthday": "2008-01-01",
                    "pet_name": "浅色夏末",
                    "era": 1,
                    "mate_name": "梦中呓语",
                    "marry_time": "2010-01-01",
                    "online_time": 6781,
                    "level": 45,
                    "growth": 55,
                    "strong": 120,
                    "iq": 250,
                    "charm": 540,
                    "title_num": 100,
                    "pet_sex":"GG",
                };
                JSUtils.setCookie("uid", "123456");
                JSUtils.setCookie("token", "123456");
                pet.Global.QRcode["makeCode"]("https://icecreamheadache.gitee.io/");
                //pet.Global.QRcode["makeCode"](pet.Global.PAGEURL + "?_wv=2147616551&uid=" + pet.Global.UID + "&token=" + pet.Global.TOKEN);
                if (!pet.Global.Home) {
                    pet.Global.Home = new pet.Home();
                }
                pet.Global.Login && pet.Global.Login.boxHide();
                pet.Global.Home.init();
                JSUtils.initShare();
            }
            else {
                alert(data.msg);
            }
        };
        JSUtils.showLogin = function () {
            if (pet.Global.Login) {
                pet.Global.Login.init();
            }
            else {
                pet.Global.Login = new pet.BeforeEnterGame();
            }
        };
        JSUtils.init = function () {
            JSUtils.checkLogin();
            document.addEventListener('WeixinJSBridgeReady', function () {
                JSUtils.wxReady = true;
            });
        };
        JSUtils.initShare = function () {
            if (JSUtils.wxReady) {
                JSUtils.onBridgeReady();
            }
            else {
                document.addEventListener('WeixinJSBridgeReady', function () {
                    JSUtils.onBridgeReady();
                });
            }
            if (window["mqq"]) {
                window["mqq"].invoke("data", "setShareInfo", {
                    share_url: pet.Global.PAGEURL + "?_wv=2147617575&uid=" + pet.Global.UID + "&token=" + pet.Global.TOKEN,
                    title: '《QQ宠物》相伴十三载',
                    desc: '快来看看' + pet.Global.PETDATA["master_name"] + '家的' + pet.Global.PETDATA["pet_name"],
                    image_url: 'http://ossweb-img.qq.com/images/MF/qqpet/logo.png'
                });
            }
        };
        JSUtils.onBridgeReady = function () {
            //转发朋友圈
            window["WeixinJSBridge"].on("menu:share:timeline", function (e) {
                var data = {
                    img_url: "http://ossweb-img.qq.com/images/MF/qqpet/logo.png",
                    img_width: "68",
                    img_height: "64",
                    link: pet.Global.PAGEURL + "?_wv=2147617575&uid=" + pet.Global.UID + "&token=" + pet.Global.TOKEN,
                    desc: '快来看看' + pet.Global.PETDATA["master_name"] + '家的' + pet.Global.PETDATA["pet_name"],
                    title: "《QQ宠物》相伴十三载"
                };
                window["WeixinJSBridge"].invoke("shareTimeline", data, function (res) {
                    window["WeixinJSBridge"].log(res.err_msg);
                });
            });
            //分享给朋友
            window["WeixinJSBridge"].on('menu:share:appmessage', function (argv) {
                window["WeixinJSBridge"].invoke("sendAppMessage", {
                    img_url: "http://ossweb-img.qq.com/images/MF/qqpet/logo.png",
                    img_width: "80",
                    img_height: "80",
                    link: pet.Global.PAGEURL + "?_wv=2147617575&uid=" + pet.Global.UID + "&token=" + pet.Global.TOKEN,
                    desc: '快来看看' + pet.Global.PETDATA["master_name"] + '家的' + pet.Global.PETDATA["pet_name"],
                    title: "《QQ宠物》相伴十三载"
                }, function (res) {
                    window["WeixinJSBridge"].log(res.err_msg);
                });
            });
        };
        JSUtils.getCookie = function (name) {
            var lc = Browser.window.localStorage;
            if (lc != null) {
                var r = lc.getItem(name);
                if (r && r.length > 0) {
                    return r;
                }
            }
            var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
            if (arr = Browser.document.cookie.match(reg)) {
                return arr[2];
            }
            return null;
        };
        JSUtils.setCookie = function (name, value) {
            if (window.localStorage) {
                window.localStorage.setItem(name, value);
            }
            else {
                var exp = new Date();
                exp.setTime(exp.getTime() + 86400);
                document.cookie = name + "=" + window["escape"](value) + ";path=/";
            }
        };
        JSUtils.formatDate = function (time, type) {
            if (type === void 0) { type = 1; }
            var ret = "";
            time = time.replace(" ", "-");
            var date = time.split("-");
            ret = date[0] + "年" + date[1] + "月" + date[2] + "日";
            return ret;
        };
        JSUtils.getQueryString = function (name) {
            /*
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = Browser.window.location.search.substr(1).match(reg);
            if (r != null)
                return decodeURIComponent(r[2]);*/
            return 'q宠宝贝';
        };
        JSUtils._sdkReady = false;
        JSUtils.friendList = [];
        JSUtils.factionList = [];
        JSUtils.wxReady = false;
        return JSUtils;
    }());
    pet.JSUtils = JSUtils;
})(pet || (pet = {}));
//# sourceMappingURL=JSUtils.js.map
var pet;
(function (pet) {
    var Event = laya.events.Event;
    /**
     * Xhr 异步加载数据类，支持JSON，TEXT，XML数据类型
     * 基于laya.net.HttpRequest封装
     *        /**
     * 发送请求。
     * @param	url 请求的地址。
     * @param	data 发送的数据，可选。
     * @param	method 发送数据方式，值为“get”或“post”，默认为 “get”方式。
     * @param	responseType 返回消息类型，可设置为"text"，"json"，"xml","arraybuffer"。
     * @param	headers 头信息，key value数组，比如["Content-Type", "application/json"]。
        send(url: string, data?: any, method?: string, responseType?: string, headers?: Array<any>): void;

        XHR().Post({"file":"petpk","cmd":"visit","uid":"1001"},this,function(data){})
        

     */
    var Xhr = (function () {
        function Xhr() {
            this.times = 0;
            this.maxTimes = 3; //加载错误重试次数
            this.isWorking = false;
            this.maxTime = 5000; //超时设置
            this.xhrList = new Array();
            this.netArray = [];
            this._xhr = new laya.net.HttpRequest();
            Xhr._self = this;
            //this._xhr["_http"].withCredentials = true;
        }
        Object.defineProperty(Xhr, "singleton", {
            get: function () {
                if (pet.Xhr._singleton == null) {
                    pet.Xhr._singleton = new pet.Xhr();
                }
                return pet.Xhr._singleton;
            },
            enumerable: true,
            configurable: true
        });
        Xhr.prototype.Post = function (data, thisObj, callBack, curl) {
            if (callBack === void 0) { callBack = null; }
            if (curl === void 0) { curl = ""; }
            var url = CMD().GetUrl(data);
            if (curl)
                url = curl;
            this.xhrList.push({ "url": url, "data": data, "req": data, "thisobj": thisObj, "callBack": callBack, "type": "text", "method": "post", "datatype": "JSON" });
            this.checkList();
        };
        //加载json数据
        Xhr.prototype.GetJson = function (url, thisObj, callBack, showLoadding) {
            if (callBack === void 0) { callBack = null; }
            if (showLoadding === void 0) { showLoadding = false; }
            this.xhrList.push({ "url": url, "thisobj": thisObj, "callBack": callBack, "showLoadding": showLoadding, "type": "text", "method": "get", "datatype": "JSON" });
            this.checkList();
        };
        Xhr.prototype.PushList = function (url, thisObj, callBack, showLoadding) {
            if (callBack === void 0) { callBack = null; }
            if (showLoadding === void 0) { showLoadding = false; }
            this.xhrList.push({ "url": url, "thisobj": thisObj, "callBack": callBack, "showLoadding": showLoadding, "type": "text", "method": "get", "datatype": "JSON" });
        };
        //加载序列
        Xhr.prototype.checkList = function () {
            //如果没有请求正在运行
            if (!this.isWorking) {
                Laya.timer.clear(this, this.onTimeOut);
                if (this.xhrList.length > 0) {
                    this._xhr.offAll();
                    this._xhr.once(Event.PROGRESS, this, this.onHttpRequestProgress);
                    this._xhr.once(Event.COMPLETE, this, this.onHttpRequestComplete);
                    //var _this=this;
                    //var callBack=this.onHttpRequestComplete;
                    this._xhr.once(Event.ERROR, this, this.onHttpRequestError);
                    Laya.timer.once(this.maxTime, this, this.onTimeOut); //请求超时处理
                    this.netArray.unshift({ "req": this.xhrList[0].req });
                    this.isWorking = true;
                    var _postData = CMD().GetPost(this.xhrList[0].data);
                    this.xhrList[0].req = CMD().GetPost(this.xhrList[0].data);
                    //厘米秀请求
                    this._xhr.send(this.xhrList[0].url, _postData, this.xhrList[0].method, this.xhrList[0].type);
                }
            }
        };
        //超时处理
        Xhr.prototype.onTimeOut = function () {
            this.times = this.maxTimes + 1;
            //尝试超时重释xhr
            this._xhr.offAll();
            this._xhr = null;
            this._xhr = new laya.net.HttpRequest();
            //如果需要重新请求
            if (this.xhrList[0]["req"] && this.xhrList[0]["req"]["needreload"]) {
                delete this.xhrList[0]["req"]["needreload"];
                this.isWorking = false;
                this.checkList();
            }
            else {
                delete this.xhrList[0]["req"]["needreload"];
                var nowObj = this.xhrList[0];
                this.onHttpRequestError({ "result": 1000, "errormsg": "咦？刚刚消息没有到达乐斗江湖" });
            }
        };
        //加载出错重释
        Xhr.prototype.onHttpRequestError = function (e) {
            this.times++;
            this.isWorking = false;
            if (this.times <= this.maxTimes) {
                this.checkList();
            }
            else {
                var _errorData = { result: 2000, msg: "咦？网络君打了个盹~~" };
                if (e["result"]) {
                    _errorData["result"] = e["result"];
                }
                if (e["errormsg"]) {
                    _errorData["msg"] = e["errormsg"];
                }
                _errorData["msg"] = _errorData["msg"];
                var _callback = this.xhrList[0].callBack;
                var _this = this.xhrList[0].thisobj;
                var nowObj = this.xhrList.shift(); //要先从xhrList里面干掉，再执行Loading.hide(),然后再调用callback
                var obj = this.netArray[0];
                obj['rsp'] = JSON.stringify(_errorData);
                if (_this && _callback && (!_this.hasOwnProperty("destroyed") || _this["destroyed"] == false)) {
                    _callback.apply(_this, [_errorData]);
                }
                this._xhr.offAll();
                this.times = 0;
                this.checkList();
            }
        };
        //XHR请求进度
        Xhr.prototype.onHttpRequestProgress = function (e) {
        };
        //XHR请求成功
        Xhr.prototype.onHttpRequestComplete = function (e) {
            Laya.timer.frameOnce(1, this, this.RequestComplete, [e]);
        };
        //重新请求最后一次请求
        Xhr.prototype.ReLoadRequest = function () {
            if (this._lastXHR) {
                this.xhrList.push(this._lastXHR);
                this.checkList();
            }
        };
        Xhr.prototype.RequestComplete = function (e) {
            if (this.xhrList[0] && this.xhrList[0].callBack != null) {
                var _callback = this.xhrList[0].callBack;
                var _this = this.xhrList[0].thisobj;
                var _data = this._xhr.data;
                var _request_data = this._xhr.data ? this._xhr.data : e;
                if (this.xhrList[0].datatype == "JSON") {
                    if (!_request_data) {
                        _data = { "result": -2, "msg": "很抱歉，出错了" };
                    }
                    else {
                        try {
                            _data = JSON.parse(_request_data);
                        }
                        catch (e) {
                            _data = { "result": -2, "msg": "很抱歉，出错了~" };
                        }
                    }
                }
                this.xhrList.shift();
                var obj = this.netArray[0];
                obj['rsp'] = _request_data;
                if (_this && _callback && (!_this.hasOwnProperty("destroyed") || _this["destroyed"] == false)) {
                    _callback.apply(_this, [_data]);
                }
            }
            else {
                this.xhrList.shift();
            }
            this.isWorking = false;
            this.times = 0;
            this.checkList();
        };
        Xhr.prototype.doErrorResult = function (result, msg) {
            switch (result) {
                default:
                    alert(msg);
                    break;
            }
        };
        Xhr._singleton = null;
        return Xhr;
    }());
    pet.Xhr = Xhr;
    var XhrCmd = (function () {
        function XhrCmd() {
        }
        Object.defineProperty(XhrCmd, "singleton", {
            get: function () {
                if (pet.XhrCmd._singleton == null) {
                    pet.XhrCmd._singleton = new pet.XhrCmd();
                }
                return pet.XhrCmd._singleton;
            },
            enumerable: true,
            configurable: true
        });
        XhrCmd.prototype.GetPost = function (data) {
            var url = "";
            for (var i in data) {
                if (i != "file") {
                    url += "&" + i + "=" + data[i];
                }
            }
            url = url.replace("&", "");
            return url;
        };
        XhrCmd.prototype.GetUrl = function (obj) {
            var url = pet.Global.WebHost;
            url += (obj["filename"]) ? obj["filename"] : "petpk";
            url += (obj["cmd"]) ? "?cmd=" + obj["cmd"] : "?cmd=index";
            for (var i in obj) {
                if (i != "cmd" && i != "file") {
                    url += "&" + i + "=" + obj[i];
                }
            }
            return url;
        };
        XhrCmd._singleton = null;
        return XhrCmd;
    }());
    pet.XhrCmd = XhrCmd;
    function XHR() {
        var instance = pet.Xhr.singleton;
        return instance;
    }
    pet.XHR = XHR;
    function CMD() {
        var instance = pet.XhrCmd.singleton;
        return instance;
    }
    pet.CMD = CMD;
})(pet || (pet = {}));
//# sourceMappingURL=Xhr.js.map
var pet;
(function (pet_1) {
    var Handler = laya.utils.Handler;
    var Loader = laya.net.Loader;
    var Animation = Laya.Animation;
    var Tween = laya.utils.Tween;
    var Ease = laya.utils.Ease;
    var Home = (function () {
        function Home() {
            this._aniFlag = false;
            this._pageindex = 0;
            this._pagemax = 9;
            this._pageText = [];
            this._onPageAni = false;
            this._words = [
                "",
                "Hello，主人。今天你能多陪陪我么~",
                "今天天气好晴朗，处处好风光♫~",
                "摩擦摩擦，似魔鬼的步伐♫~",
                "最重要是吃饭，现在暂别减肥,哈哈~~",
                "我们一起玩吧，不要烦恼，开心就好~",
                "洗澡好舒服，浑身轻了很多呢",
                "我觉得我很帅，但帅得还不明显。",
                "钱不是问题，问题是没钱。",
                "冰冻三尺非一日之寒，肚腩三层非一日之馋。",
                "小样儿~来戳我啊！",
                "今天天气好晴朗，处处好风光♫~"
            ];
            this._assets = [];
            //加载所有动画和图片资源
            var sexStr = pet_1.Global.PETDATA["pet_sex"];
            //var sexStr = "GG";
            this._assets.push({ url: "res/atlas/ui/main.json", type: Loader.ATLAS });
            this._assets.push({ url: "res/atlas/ui/ani/" + sexStr + "/zayan.json", type: Loader.ATLAS });
            this._assets.push({ url: "res/atlas/ui/ani/" + sexStr + "/zhaoshou.json", type: Loader.ATLAS });
            this._assets.push({ url: "res/atlas/ui/ani/" + sexStr + "/huaban.json", type: Loader.ATLAS });
            this._assets.push({ url: "res/atlas/ui/ani/" + sexStr + "/chifan.json", type: Loader.ATLAS });
            this._assets.push({ url: "res/atlas/ui/ani/" + sexStr + "/xiuxian.json", type: Loader.ATLAS });
            this._assets.push({ url: "res/atlas/ui/ani/" + sexStr + "/xizao.json", type: Loader.ATLAS });
            Laya.loader.load(this._assets, Handler.create(this, this.resLoadComplete));
        }
        Home.prototype.init = function () {
            if (this._display) {
                this._display.visible = true;
                this.initPageText();
            }
        };
        //隐藏
        Home.prototype.boxHide = function () {
            this._display.visible = false;
        };
        //资源和企鹅动画加载完毕
        Home.prototype.resLoadComplete = function () {
            this._display = new ui.MainUI();
            Laya.stage.addChild(this._display);
            this.init();
            this._display.pageBox.visible = false;
            this._display.xizao.on(Laya.Event.CLICK, this, this.showAnimation, [6, this._display.xizao]);
            this._display.xiuxian.on(Laya.Event.CLICK, this, this.showAnimation, [5, this._display.xiuxian]);
            this._display.chifan.on(Laya.Event.CLICK, this, this.showAnimation, [4, this._display.chifan]);
            this._display.huiyi.on(Laya.Event.CLICK, this, this.showPetLog);
            this._display.pageBox.on(Laya.Event.CLICK, this, this.showPageAni);
            this._display.homeBtn.on(Laya.Event.CLICK, this, this.pageHide, [this._display.homeBtn]);
            this._display.shareBtn.on(Laya.Event.CLICK, this, this.shareView);
            this._display.friendGroup.on(Laya.Event.CLICK, this, this.shareView);
            this.showAnimation(1);
            this._display.petName.text = pet_1.Global.PETDATA["master_name"] + "家的" + pet_1.Global.PETDATA["pet_name"];
        };
        Home.prototype.shareView = function () {
            this._display.friendGroup.visible = this._display.friendGroup.visible == false ? true : false;
        };
        //播放企鹅动画
        Home.prototype.showAnimation = function (idx, sprite) {
            if (!this._ani) {
                this._ani = new Animation();
                this._display.roleBox.addChild(this._ani);
                this._ani.on(Laya.Event.COMPLETE, this, this.showAnimation, []);
                this._display.aniHit.on(Laya.Event.CLICK, this, this.showAniPanel);
            }
            if (idx > 1) {
                this.showAniPanel();
            }
            if (!idx) {
                if (Math.random() > 0.5) {
                    idx = Math.floor(Math.random() * 3 + 1);
                }
                else {
                    idx = 1;
                }
            }
            this._display.xizao.getChildAt(0)["visible"] = false;
            this._display.xiuxian.getChildAt(0)["visible"] = false;
            this._display.chifan.getChildAt(0)["visible"] = false;
            this._display.huiyi.getChildAt(0)["visible"] = false;
            if (sprite) {
                sprite.getChildAt(0)["visible"] = true;
            }
            var wordidx = Math.random() * 10;
            this._ani.loadAtlas(this._assets[idx].url);
            if (idx != 1) {
                this.sayWords(this._words[idx]);
            }
            else if (wordidx > 5 && this._display.dialog.visible == false) {
                this.sayWords(this._words[parseInt(wordidx)]);
            }
            this._ani.scaleX = 2;
            this._ani.scaleY = 2;
            this._ani.autoPlay = true;
            this._ani.interval = 95;
            this._ani.index = 1;
            this._ani.x = 0;
            this._ani.y = -0;
        };
        //显示动画控制面板
        Home.prototype.showAniPanel = function () {
            this._display.paoBox.visible = this._display.paoBox.visible == true ? false : true;
        };
        Home.prototype.sayWords = function (strMsg) {
            this._display.dialog.visible = true;
            this._display.tfWords.text = strMsg;
            Laya.timer.clear(this, this.hideWords);
            Laya.timer.once(3000, this, this.hideWords);
        };
        Home.prototype.hideWords = function () {
            this._display.dialog.visible = false;
        };
        //显示企鹅历程
        Home.prototype.showPetLog = function () {
            if (this._pageindex == 0) {
                this.showAllPage();
            }
            else {
                this.showPageAni();
            }
            this._display.pageBox.visible = true;
            this.showAniPanel();
        };
        //页面切换动画效果
        Home.prototype.showPageAni = function () {
            if (this._pageindex < this._pagemax && !this._onPageAni && this._pageindex != 0) {
                var aniRanom = Math.random() * 4 - 2;
                var len = pet_1.Global.WIDTH + pet_1.Global.HEIGHT;
                this._onPageAni = true;
                //透明度渐变并且渐出
                Tween.to(this._display["page" + this._pageindex], { alpha: 0 }, 1000, Ease.expoIn, Handler.create(this, this.showPageAniComplete));
                Tween.to(this._display["page" + this._pageindex], { x: len * aniRanom, y: len * (aniRanom - 1) }, 900, Ease.expoInOut);
            }
            else {
                console.log(this._pageindex);
            }
        };
        Home.prototype.pageHide = function (node) {
            console.log(node);
            if (this._pageindex > 8) {
                this._display.pageBox.visible = false;
                this._pageindex = 0;
            }
        };
        //页面切换完毕隐藏页面
        Home.prototype.showPageAniComplete = function () {
            if (this._pageindex > 0) {
                this._display["page" + this._pageindex].visble = false;
            }
            this._pageindex++;
            this._onPageAni = false;
        };
        //显示二维码
        Home.prototype.showMosaic = function () {
            var codediv = document.getElementById("qrcode");
            var pic = codediv.getElementsByTagName("img")[0];
            this._display.mosaicPic.skin = pic.src;
            this._display.mosaicText.text = pet_1.Global.PETDATA["master_name"] + "家的" + pet_1.Global.PETDATA["pet_name"] + "【专属二维码】";
        };
        Home.prototype.showAllPage = function () {
            this._pageindex++;
            for (var i = 1; i <= this._pagemax; i++) {
                //将所有page复位，文字写入
                this._display["page" + i].visible = true;
                this._display["page" + i].alpha = 1;
                this._display["page" + i].x = 0;
                this._display["page" + i].y = 0;
                if (i < this._pagemax) {
                    this._display["page" + i + "Text"].text = this._pageText[i - 1];
                }
            }
            this.showMosaic();
        };
        Home.prototype.initPageText = function () {
            var host = "你";
            var pet = "小企鹅";
            if (pet_1.Global.OPENTYPE == 2) {
                host = pet_1.Global.PETDATA["master_name"];
            }
            this._pageText[0] = "还记得吗？" + pet_1.JSUtils.formatDate(pet_1.Global.PETDATA["birthday"]) + "是小企鹅破壳而出的日子。";
            this._pageText[1] = "作为一只" + pet_1.Global.PETDATA["era"] + "代企鹅，" + host + "给Ta取名" + pet_1.Global.PETDATA["pet_name"];
            this._pageText[2] = "在" + host + "的宠爱下，小企鹅一天天长大，" + host + "送Ta去读书，带Ta去旅行，陪Ta玩耍，留下了弥足珍贵的回忆！";
            if (pet_1.Global.PETDATA["mate_name"] && pet_1.Global.PETDATA["marry_time"]) {
                this._pageText[3] = pet_1.JSUtils.formatDate(pet_1.Global.PETDATA["marry_time"]) + "，小企鹅与Ta的另一半" + pet_1.Global.PETDATA["mate_name"] + "走入了婚姻的殿堂，在神父特里斯坦的见证下，幸福牵手！";
            }
            else {
                this._pageText[3] = "小企鹅在" + host + "的陪伴下在企鹅世界努力寻找着另一半！";
            }
            this._pageText[4] = "这些年，" + host + "陪伴了小企鹅" + pet_1.Global.PETDATA["online_time"] + "小时，Ta努力成长，等级达到了" + pet_1.Global.PETDATA["level"] + "级，成长值达到了" + pet_1.Global.PETDATA["growth"];
            this._pageText[5] = "经过千锤百炼，" + host + "的小企鹅三围属性达到了：\n武力：" + pet_1.Global.PETDATA["strong"] + "\n智力：" + pet_1.Global.PETDATA["iq"] + "\n魅力：" + pet_1.Global.PETDATA["charm"];
            this._pageText[6] = "在这相伴无数的日子里," + host + "和小企鹅一起赢得了" + pet_1.Global.PETDATA["title_num"] + "个星级称号";
            this._pageText[7] = "未来，小企鹅会继续在这里陪伴着你们，想Ta了要记得来看Ta哦~";
        };
        return Home;
    }());
    pet_1.Home = Home;
})(pet || (pet = {}));
//# sourceMappingURL=Home.js.map
var pet;
(function (pet) {
    var Global = (function () {
        function Global() {
        }
        Global.WIDTH = 1334;
        Global.HEIGHT = 750;
        Global.UID = "";
        Global.TOKEN = "";
        Global.WebHost = "https://qhxt.pet.qq.com/qqpet/";
        Global.WebPath = "/fcgi-bin/";
        Global.BASE_FILE = "feeling";
        Global.OPENTYPE = 0; //登录类型，0为没任何态登录，1是cookie中有用户id和token，2是通过分享登录
        Global.PAGEURL = "https://ossweb-img.qq.com/images/MF/qqpet/index.html";
        return Global;
    }());
    pet.Global = Global;
})(pet || (pet = {}));
//# sourceMappingURL=Global.js.map
var pet;
(function (pet) {
    var BeforeEnterGame = (function () {
        function BeforeEnterGame() {
            //super();
            this._display = new ui.BeforeEnterGameLoadingUI();
            Laya.stage.addChild(this._display);
            this._display.confirmBtn.on(Laya.Event.CLICK, this, this.login);
        }
        BeforeEnterGame.prototype.init = function () {
            this._display.visible = true;
        };
        BeforeEnterGame.prototype.login = function () {
            var uid = this._display.userID.text;
            var token = this._display.password.text;
            if (uid && token) {
                pet.Global.UID = uid;
                pet.Global.TOKEN = token;
                pet.JSUtils.getUserData();
            }
        };
        BeforeEnterGame.prototype.boxHide = function () {
            this._display.visible = false;
        };
        return BeforeEnterGame;
    }());
    pet.BeforeEnterGame = BeforeEnterGame;
})(pet || (pet = {}));
//# sourceMappingURL=BeforeEnterGame.js.map
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var View = laya.ui.View;
var Dialog = laya.ui.Dialog;
var ui;
(function (ui) {
    var BeforeEnterGameLoadingUI = (function (_super) {
        __extends(BeforeEnterGameLoadingUI, _super);
        function BeforeEnterGameLoadingUI() {
            _super.call(this);
        }
        BeforeEnterGameLoadingUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(ui.BeforeEnterGameLoadingUI.uiView);
        };
        BeforeEnterGameLoadingUI.uiView = { "type": "View", "props": { "width": 1334, "height": 750 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "ui/main/loginbg.jpg" } }, { "type": "TextInput", "props": { "y": 310, "x": 452, "width": 417, "var": "userID", "promptColor": "#998181", "prompt": "请输入帐号昵称", "height": 39, "fontSize": 24, "color": "#0d0d55", "bold": true } }, { "type": "TextInput", "props": { "y": 376, "x": 452, "width": 417, "var": "password", "type": "password", "promptColor": "#998181", "prompt": "请输入密码", "height": 39, "fontSize": 24, "color": "#0d0d55", "bold": true } }, { "type": "Image", "props": { "y": 445, "x": 453, "width": 420, "var": "confirmBtn", "height": 75 } }] };
        return BeforeEnterGameLoadingUI;
    }(View));
    ui.BeforeEnterGameLoadingUI = BeforeEnterGameLoadingUI;
})(ui || (ui = {}));
var ui;
(function (ui) {
    var MainUI = (function (_super) {
        __extends(MainUI, _super);
        function MainUI() {
            _super.call(this);
        }
        MainUI.prototype.createChildren = function () {
            View.regComponent("Text", laya.display.Text);
            _super.prototype.createChildren.call(this);
            this.createView(ui.MainUI.uiView);
        };
        MainUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 1334, "height": 750 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "ui/page/home.jpg" } }, { "type": "Text", "props": { "y": 5, "x": 5, "width": 319, "var": "petName", "text": "111111111111111111111", "strokeColor": "#ffff00", "stroke": 3, "height": 24, "fontSize": "24", "color": "#0000dd", "bold": true, "align": "left" } }, { "type": "Box", "props": { "y": 178, "x": 431, "width": 903, "var": "aniLayer2", "mouseThrough": true, "height": 572 }, "child": [{ "type": "Box", "props": { "y": 100, "x": 141, "width": 200, "var": "roleBox", "height": 217 }, "child": [{ "type": "Box", "props": { "y": 83, "x": 0, "width": 205, "var": "aniHit", "height": 197 } }] }, { "type": "Box", "props": { "y": 0, "x": 400, "width": 210, "visible": false, "var": "dialog", "mouseThrough": true, "mouseEnabled": true, "height": 173 }, "child": [{ "type": "Image", "props": { "y": -56, "x": -12, "width": 319, "skin": "ui/main/wors_bg.png", "mouseEnabled": true, "height": 233 } }, { "type": "Text", "props": { "y": 24, "x": 43, "wordWrap": true, "width": 222, "var": "tfWords", "valign": "middle", "strokeColor": "#ffffff", "stroke": 3, "leading": 4, "height": 105, "fontSize": "24", "color": "#5a152b", "bold": true, "align": "center" } }] }, { "type": "Box", "props": { "y": 100, "x": 344, "width": 123, "visible": false, "var": "paoBox", "height": 173 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 130, "skin": "ui/main/menubg.png", "height": 173 } }, { "type": "Text", "props": { "y": 8, "x": 11, "width": 116, "var": "xizao", "text": "  清  洁", "strokeColor": "#206070", "stroke": 4, "height": 32, "fontSize": "28", "color": "#ddeeff", "bold": true }, "child": [{ "type": "Image", "props": { "y": -5, "x": 0, "width": 116, "skin": "ui/main/choose.png", "height": 40 } }] }, { "type": "Text", "props": { "y": 50, "x": 11, "width": 116, "var": "chifan", "text": "  喂  养", "strokeColor": "#206070", "stroke": 4, "height": 32, "fontSize": "28", "color": "#ddeeff", "bold": true }, "child": [{ "type": "Image", "props": { "y": -5, "x": 0, "width": 116, "skin": "ui/main/choose.png", "height": 40 } }] }, { "type": "Text", "props": { "y": 135, "x": 11, "width": 116, "var": "huiyi", "text": "  历  史", "strokeColor": "#206070", "stroke": 4, "height": 32, "fontSize": "28", "color": "#ddeeff", "bold": true }, "child": [{ "type": "Image", "props": { "y": -5, "x": 0, "width": 116, "skin": "ui/main/choose.png", "height": 40 } }] }, { "type": "Text", "props": { "y": 93, "x": 11, "width": 116, "var": "xiuxian", "text": "  玩  耍", "strokeColor": "#206070", "stroke": 4, "height": 32, "fontSize": "28", "color": "#ddeeff", "bold": true }, "child": [{ "type": "Image", "props": { "y": -5, "x": 0, "width": 116, "skin": "ui/main/choose.png", "height": 40 } }] }] }, { "type": "Sprite", "props": { "y": -178, "x": -431, "width": 1334, "var": "aniLayer", "mouseThrough": true, "mouseEnabled": false, "height": 750 } }] }, { "type": "Box", "props": { "visible": false, "var": "pageBox" }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "var": "page9" }, "child": [{ "type": "Image", "props": { "skin": "ui/main/mosaic.jpg" } }, { "type": "Image", "props": { "y": 262, "x": 150, "width": 420, "var": "shareBtn", "height": 75 } }, { "type": "Image", "props": { "y": 412, "x": 150, "width": 420, "var": "homeBtn", "height": 75 } }, { "type": "Image", "props": { "y": 188, "x": 787, "width": 320, "var": "mosaicPic", "height": 320 } }, { "type": "Box", "props": { "y": 0, "x": 0, "width": 1334, "visible": false, "var": "friendGroup", "height": 750 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 1334, "skin": "ui/main/alpha40.png", "height": 750 } }, { "type": "Image", "props": { "y": 413, "x": 763, "skin": "ui/page/15_share.png", "rotation": 0 } }] }, { "type": "Text", "props": { "y": 545, "x": 722, "width": 445, "var": "mosaicText", "text": "text", "height": 56, "fontSize": "20", "color": "#082599", "bold": true, "align": "center" } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page8" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/8.jpg" } }, { "type": "Text", "props": { "y": 66, "x": 110, "wordWrap": true, "width": 1100, "var": "page8Text", "strokeColor": "#ffffcc", "stroke": 8, "leading": 20, "height": 100, "fontSize": "48", "color": "#aa5f1b", "bold": true } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page7" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/7.jpg" } }, { "type": "Text", "props": { "y": 26, "x": 116, "wordWrap": true, "width": 1100, "var": "page7Text", "strokeColor": "#ffeeff", "stroke": 8, "leading": 20, "height": 100, "fontSize": "48", "color": "#600777", "bold": true } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page6" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/6.jpg" } }, { "type": "Text", "props": { "y": 31, "x": 83, "wordWrap": true, "width": 1071, "var": "page6Text", "strokeColor": "#ffffff", "stroke": 8, "leading": 25, "height": 186, "fontSize": "48", "color": "#0e9ac6", "bold": true } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page5" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/5.jpg" } }, { "type": "Text", "props": { "y": 157, "x": 42, "wordWrap": true, "width": 497, "var": "page5Text", "strokeColor": "#ffffff", "stroke": 8, "leading": 25, "height": 398, "fontSize": "48", "color": "#ee9c22", "bold": true } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page4" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/4.jpg" } }, { "type": "Text", "props": { "y": 140, "x": 52, "wordWrap": true, "width": 536, "var": "page4Text", "strokeColor": "#ee5b22", "stroke": 8, "leading": 25, "height": 313, "fontSize": "40", "color": "#ffffff", "bold": true } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page3" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/3.jpg" } }, { "type": "Text", "props": { "y": 114, "x": 54, "wordWrap": true, "width": 958, "var": "page3Text", "strokeColor": "#8e2267", "stroke": 10, "leading": 25, "height": 75, "fontSize": "48", "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page2" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/2.jpg" } }, { "type": "Text", "props": { "y": 94, "x": 26, "wordWrap": true, "width": 932, "var": "page2Text", "strokeColor": "#ee5b22", "stroke": 8, "leading": 25, "height": 143, "fontSize": "48", "color": "#ffffff", "bold": true } }] }, { "type": "Box", "props": { "y": 0, "x": 0, "var": "page1" }, "child": [{ "type": "Image", "props": { "skin": "ui/page/1.jpg" } }, { "type": "Text", "props": { "y": 112, "x": 175, "wordWrap": true, "width": 1071, "var": "page1Text", "strokeColor": "#ffffff", "stroke": 8, "leading": 25, "height": 143, "fontSize": "48", "color": "#0388c6", "bold": true } }] }] }], "animations": [{ "nodes": [{ "target": 429, "keyframes": { "y": [{ "value": 251, "tweenMethod": "linearNone", "tween": true, "target": 429, "key": "y", "index": 0 }, { "value": 274, "tweenMethod": "linearNone", "tween": true, "target": 429, "key": "y", "index": 30 }], "x": [{ "value": 237, "tweenMethod": "linearNone", "tween": true, "target": 429, "key": "x", "index": 0 }, { "value": 248, "tweenMethod": "linearNone", "tween": true, "target": 429, "key": "x", "index": 30 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }] };
        return MainUI;
    }(View));
    ui.MainUI = MainUI;
})(ui || (ui = {}));
//# sourceMappingURL=layaUI.max.all.js.map
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var hf;
(function (hf) {
    var Loader = laya.net.Loader;
    /**
     * 图片文字工具类，会将图片文字进行拼接
     * 比如：0，1，2，3，4，5，6，7，8，9的数组图片，可以自由组合成各种需要的数字
     *
     * url:"fight/word/damage/"
     *
     */
    var ImageWord = (function (_super) {
        __extends(ImageWord, _super);
        function ImageWord(url) {
            _super.call(this);
            this._url = ""; //图片路径
            this._imgWidth = 0;
            this._imgHeight = 0;
            this._url = url;
        }
        Object.defineProperty(ImageWord.prototype, "imgWidth", {
            get: function () {
                return this._imgWidth;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageWord.prototype, "imgHeight", {
            get: function () {
                return this._imgHeight;
            },
            enumerable: true,
            configurable: true
        });
        /**
        *
        * 销毁逻辑
        *
        */
        ImageWord.prototype.destroy = function () {
            _super.prototype.destroy.call(this);
        };
        /**
         *
         * 设置显示的文字
         *
         */
        ImageWord.prototype.showWord = function (word, neadClear, space) {
            if (neadClear === void 0) { neadClear = true; }
            if (space === void 0) { space = 0; }
            if (neadClear)
                this.graphics.clear();
            this._imgWidth = 0;
            this._imgHeight = 0;
            var wordArr = word.split("");
            var len = wordArr.length;
            var singleWord;
            var curX = 0;
            var tex;
            for (var i = 0; i < len; i++) {
                singleWord = wordArr[i];
                tex = Loader.getRes(this._url + singleWord + ".png");
                if (tex) {
                    this.graphics.drawTexture(tex, curX, 0);
                    curX += tex.sourceWidth + space;
                    if (tex.sourceHeight > this._imgHeight) {
                        this._imgHeight = tex.sourceHeight;
                    }
                }
                else {
                }
            }
            this._imgWidth = curX - space;
        };
        ImageWord.prototype.clearWord = function () {
            this.graphics.clear();
        };
        /**
        *
        * 设置显示的文字
        *
        */
        ImageWord.prototype.showWordUnit = function (word, neadClear, space) {
            if (neadClear === void 0) { neadClear = true; }
            if (space === void 0) { space = 0; }
            if (neadClear)
                this.graphics.clear();
            this._imgWidth = 0;
            this._imgHeight = 0;
            var curX = 0;
            var tex;
            tex = Loader.getRes(this._url + word + ".png");
            if (tex) {
                this.graphics.drawTexture(tex, curX, 0);
                curX += tex.sourceWidth + space;
                if (tex.sourceHeight > this._imgHeight) {
                    this._imgHeight = tex.sourceHeight;
                }
                this._imgWidth = curX - space;
            }
            else {
            }
        };
        return ImageWord;
    }(Laya.Sprite));
    hf.ImageWord = ImageWord;
})(hf || (hf = {}));
//# sourceMappingURL=ImageWord.js.map
var Sprite = laya.display.Sprite;
var Browser = laya.utils.Browser;
var Stat = laya.utils.Stat;
var HFMain = (function () {
    function HFMain() {
        this._soundUrl = [
            "1.mp3",
            "2.mp3",
            "3.mp3",
            "4.mp3",
            "5.mp3",
            "6.mp3",
        ];
        this._soundIdx = 0;
        Laya.init(1334, 750);
        Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL;
        Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
        Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
        Laya.stage.scaleMode = Laya.Stage.SCALE_SHOWALL;
        pet.JSUtils.init();
        //生成用户宠物二维码对象
        pet.Global.QRcode = new window["QRCode"]("qrcode");
        Laya.SoundManager.autoStopMusic = false;
        this.playsound();
    }
    HFMain.prototype.playsound = function () {
        Laya.SoundManager.playMusic("assets/sound/" + this._soundUrl[this._soundIdx], 1, laya.utils.Handler.create(this, this.playsound));
        this._soundIdx = this._soundIdx < 5 ? (this._soundIdx + 1) : 0;
    };
    return HFMain;
}());
pet.Global.GameMain = new HFMain();
//# sourceMappingURL=HFMain.js.map
/*  |xGv00|1668cb15e2af4f3b740ce61c91d66634 */